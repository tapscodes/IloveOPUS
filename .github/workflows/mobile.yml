name: Build iLoveOPUS Mobile

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-android:
    name: iLoveOPUSAndroid
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install buildozer cython
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip python3-setuptools python3-wheel python3-virtualenv wget
      - name: Install Android NDK and cross tools
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r26c-linux.zip
          unzip android-ndk-r26c-linux.zip
          mv android-ndk-r26c $HOME/android-ndk
          echo "ANDROID_NDK_ROOT=$HOME/android-ndk" >> $GITHUB_ENV
      - name: Build FFMPEG (static libs for Android)
        env:
          ANDROID_NDK_ROOT: ${{ env.ANDROID_NDK_ROOT }}
        run: |
          git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg
          cd ffmpeg
          export TOOLCHAIN=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64
          export API=21
          export TARGET=aarch64-linux-android
          export AR=$TOOLCHAIN/bin/llvm-ar
          export AS=$TOOLCHAIN/bin/llvm-as
          export CC=$TOOLCHAIN/bin/${TARGET}${API}-clang
          export CXX=$TOOLCHAIN/bin/${TARGET}${API}-clang++
          export LD=$TOOLCHAIN/bin/ld
          export NM=$TOOLCHAIN/bin/llvm-nm
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          ./configure \
            --arch=aarch64 \
            --cpu=armv8-a \
            --target-os=android \
            --cross-prefix=$TOOLCHAIN/bin/${TARGET}- \
            --cc=$CC \
            --enable-cross-compile \
            --sysroot=$TOOLCHAIN/sysroot \
            --disable-doc \
            --disable-programs \
            --enable-static \
            --disable-shared \
            --disable-debug \
            --enable-libopus \
            --enable-libmp3lame \
            --enable-libfdk-aac \
            --enable-gpl \
            --enable-nonfree \
            --enable-pic \
            --enable-small \
            --disable-everything \
            --enable-encoder=libopus,libmp3lame,libfdk_aac \
            --enable-decoder=mp3,aac,flac,alac,opus \
            --enable-demuxer=mp3,aac,flac,alac,ogg,wav \
            --enable-muxer=opus,ogg,mp3,flac,wav \
            --enable-parser=opus,flac,aac,mp3 \
            --enable-protocol=file
          make -j2
          cd ..
      - name: Build APK
        run: |
          pip install kivy mutagen pillow
          pip install buildozer
          buildozer init
          sed -i 's/^# *source.include_exts = .*/source.include_exts = py,png,jpg,kv,atlas/' buildozer.spec
          sed -i 's/^# *requirements = .*/requirements = python3,kivy,mutagen,pillow/' buildozer.spec
          buildozer -v android debug
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iLoveOPUSAndroid
          path: bin/*.apk

  build-ios:
    name: iLoveOPUSiOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip3 install kivy mutagen pillow
          pip3 install cython
          brew install autoconf automake libtool pkg-config
      - name: Build FFMPEG (static libs for iOS)
        run: |
          git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg
          cd ffmpeg
          ./configure \
            --disable-doc \
            --disable-programs \
            --enable-static \
            --disable-shared \
            --disable-debug \
            --enable-libopus \
            --enable-libmp3lame \
            --enable-libfdk-aac \
            --enable-gpl \
            --enable-nonfree \
            --enable-pic \
            --enable-small \
            --disable-everything \
            --enable-encoder=libopus,libmp3lame,libfdk_aac \
            --enable-decoder=mp3,aac,flac,alac,opus \
            --enable-demuxer=mp3,aac,flac,alac,ogg,wav \
            --enable-muxer=opus,ogg,mp3,flac,wav \
            --enable-parser=opus,flac,aac,mp3 \
            --enable-protocol=file \
            --target-os=darwin --enable-cross-compile
          make -j2
          cd ..
      - name: Build iOS app (using toolchain)
        run: |
          pip3 install kivy-ios
          toolchain create iosbuild main.py
          toolchain build kivy
          toolchain build pillow
          toolchain build mutagen
          toolchain build ffmpeg
          toolchain create iosbuild main.py
          toolchain build
          toolchain package iosbuild
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iLoveOPUSiOS
          path: iosbuild/dist/*.ipa